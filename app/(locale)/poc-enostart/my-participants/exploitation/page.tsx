'use client'
import {TypographyH4} from "@/components/ui/typography";
import {Table, TableBody, TableCell, TableHead, TableHeader, TableRow} from "@/components/ui/table";
import {Button} from "@/components/ui/button";
import {DownloadIcon, FileCheck2Icon, HourglassIcon, ScrollTextIcon, SendIcon, UserIcon, XIcon} from "lucide-react";
import {cn} from "@/lib/utils";
import {useState} from "react";
import {Separator} from "@/components/ui/separator";
import {Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger} from "@/components/ui/dialog";
import {IconFileEuro} from "@tabler/icons-react";
import useParticipants from "@/app/(locale)/poc-enostart/data-refactored/participant/use-participants";

export default function Page() {
    const {exploitation, InMemConsumersSignAllDocuments, sendAllExploitationDocumentsToProducer} = useParticipants()
    const [openModal, setOpenModal] = useState(false)

    function sendAll() {
        sendAllExploitationDocumentsToProducer()
        setOpenModal(false)
    }

    function displayProducerBulletinStatus() {
        return "Document signé"
    }

    function displayProducerAccordsStatus() {
        return "Document signé"
    }

    function displayProducerContractStatus() {
        const numberOfExploitation = exploitation.length
        return "Documents signés" + ` (${numberOfExploitation})`
    }

    return (
        <div className="px-4 space-y-4">
            <div className={"flex justify-between items-center w-full"}>
                <div className={"flex"}>
                    <TypographyH4>
                        Passage en exploitation
                    </TypographyH4>

                </div>
                <Button>Télécharger les documents</Button>
            </div>
            <div className={"font-semibold pt-8"}>Producteur prêt pour démarrage</div>
            <div className={"rounded-xl border border-gray-200 flex flex-col gap-3 py-3 w-max"}>
                <div className={"flex items-center gap-2 w-full  px-4"}>
                    <div className={"flex justify-center rounded-md items-center bg-primary/5 p-2"}>
                        <UserIcon className={'size-6 text-primary'}/>
                    </div>
                    <div className={'grid'}>
                        <div className={"font-semibold"}>Remy Bastien</div>
                        <div className={"text-xs"}>Producteur</div>
                        <div className={"text-xs"}>175 kW</div>
                    </div>

                    <Dialog open={openModal}
                            onOpenChange={() => setOpenModal(!openModal)}>
                        <DialogTrigger asChild>
                            {/*<Button*/}

                            {/*    size="sm" className="text-xs ml-8">*/}
                            {/*    Envoyer les documents pour signature*/}
                            {/*    <SendIcon className="size-4 ml-1"/>*/}
                            {/*</Button>*/}
                        </DialogTrigger>
                        <DialogContent className="bg-white">
                            <DialogHeader>
                                <DialogTitle>{"Envoyer les documents à Remy Bastien"}</DialogTitle>
                            </DialogHeader>
                            <div
                                className="  h-full flex flex-col justify-between md:max-h-[80vh] text-gray-900 dark:text-neutral-400">
                                <div className="space-y-6 px-4 py-10   overflow-y-auto lg:space-y-10">

                                    <div className={"grid grid-cols-[100px_1fr]"}>
                                        <FileCheck2Icon
                                            className="shrink-0 mt-2 size-16 text-gray-800 dark:text-white"/>
                                        <div>
                                            <h2 className="text-lg font-bold text-gray-800 dark:text-white">Accords de
                                                participation</h2>
                                            <p className="mt-3   text-xs text-gray-600">
                                                {"Les accords de participation sont des documents obligatoires pour créer une opération. Ils doivent être préparés à l'avance et signés par les consommateurs et producteurs impliqués dans votre projet."}
                                            </p>
                                        </div>
                                    </div>
                                    <div className={"grid grid-cols-[100px_1fr]"}>
                                        <ScrollTextIcon
                                            className="shrink-0 mt-2 size-16 text-gray-800 dark:text-white"/>
                                        <div>
                                            <h2 className="text-lg font-bold text-gray-800 dark:text-white">{"Bulletin d'adhésion"}</h2>
                                            <p className="mt-3   text-xs text-gray-600">
                                                {"Les bulletins d'adhésion sont des documents obligatoires pour créer une opération. Ils doivent être préparés à l'avance et signés par les consommateurs et producteurs impliqués dans votre projet."}
                                            </p>
                                        </div>
                                    </div>
                                    <div className={"grid grid-cols-[100px_1fr]"}>
                                        <IconFileEuro
                                            className="shrink-0 mt-2 size-16 text-gray-800 dark:text-white"/>
                                        <div>
                                            <h2 className="text-lg font-bold text-gray-800 dark:text-white">{"Les contrats de vente"}</h2>
                                            <p className="mt-3   text-xs text-gray-600">
                                                {"Les contrats de vente sont des documents obligatoires pour créer une opération. Ils doivent être préparés à l'avance et signés par les consommateurs et producteurs impliqués dans votre projet."}
                                            </p>
                                            <div className={"grid grid-cols-3 gap-4 mt-4"}>
                                                {exploitation.map((participant) => (
                                                    <div key={participant.name}
                                                         className={"flex  bg-primary/5 px-1 rounded-md flex-col py-1"}>
                                                        <div className={"w-full flex justify-between"}>
                                                        <span
                                                            className={"text-sm font-semibold"}>{participant.name}</span>
                                                            <XIcon
                                                                className={"relative text-gray-600   size-4 cursor-pointer"}/>
                                                        </div>

                                                        <span className={"text-xs text-gray-500"}>Contrat Consommateur, 0.10 €/kWh, 25 ans</span>
                                                        <div
                                                            className={" px-3 py-4 w-max"}>
                                                            <IconFileEuro
                                                                className={"size-8 text-primary min-w-6 min-h-6"}/>
                                                        </div>
                                                    </div>
                                                ))}
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <Button className={'mt-4'} onClick={sendAll}
                                        size={'lg'}>{"Envoyer les documents à Remy Bastien"}</Button>
                            </div>
                        </DialogContent>
                    </Dialog>
                    {/*<Button*/}
                    {/*    onClick={InMemConsumersSignAllDocuments}*/}
                    {/*    size="sm" variant={'ghost'} className="text-xs ml-8">*/}
                    {/*    <HourglassIcon className="size-4 ml-1"/>*/}
                    {/*</Button>*/}


                </div>
                <Separator orientation={"horizontal"}/>
                <div className={"grid grid-cols-[200px_1fr]  px-4"}>
                    <div className={"text-sm text-gray-500"}>{"Bulletin d'adhésion"}</div>
                    <div className={"text-sm text-gray-700"}>{displayProducerBulletinStatus()}</div>
                </div>
                <div className={"grid grid-cols-[200px_1fr]  px-4"}>
                    <div className={"text-sm text-gray-500"}>{"Accords de participation"}</div>
                    <div className={"text-sm text-gray-700"}>{displayProducerAccordsStatus()}</div>
                </div>
                <div className={"grid grid-cols-[200px_1fr]  px-4"}>
                    <div className={"text-sm text-gray-500"}>{"Contrats de vente"}</div>
                    <div className={"text-sm text-gray-700"}>{displayProducerContractStatus()}</div>
                </div>
            </div>
            <div className={"flex w-full justify-between pt-8"}>
                <div className={"font-semibold"}>
                    {"Consommateurs prêts pour démarrage"}
                </div>
            </div>

            <Table>
                <TableHeader>
                    <TableRow>
                        <TableHead>Nom</TableHead>
                        <TableHead>Périmètre</TableHead>
                        <TableHead>Consommation</TableHead>
                        <TableHead>Action</TableHead>
                        {/*<TableHead>Intégré</TableHead> /!* Nouvelle colonne "Intégré" *!/*/}
                    </TableRow>
                </TableHeader>
                <TableBody>
                    {exploitation.map((participant) => (
                        <TableRow className={cn(participant.status === 'integrated' && 'opacity-40')}
                                  key={participant.id}>
                            <TableCell>{participant.name}</TableCell>
                            <TableCell>{participant.perimeter}</TableCell>
                            <TableCell>{participant.consumption}</TableCell>
                            <TableCell>
                                <Button size="sm" className="text-xs text-gray-700" variant="link">
                                    Documents terminés (3)
                                    <DownloadIcon className="size-4 ml-1"/>
                                </Button>
                            </TableCell>
                        </TableRow>
                    ))}
                </TableBody>
            </Table>
            {exploitation.length === 0 && <EmptyUserTable/>}
        </div>
    )
}

function EmptyUserTable() {
    return <div className="max-w-sm w-full min-h-[400px] flex flex-col justify-center mx-auto px-6 py-4">
        <div className="flex justify-center items-center size-[46px] bg-gray-100 rounded-lg dark:bg-neutral-800">
            <UserIcon className={"size-6"}/>
        </div>

        <h2 className="mt-5 font-semibold text-gray-800 dark:text-white">
            Pas de consommateurs prêts pour démarrage
        </h2>
        <p className="mt-2 text-sm text-gray-600 dark:text-neutral-400">
            {"Les consommateurs retournant tout les document signés seront affichés ici."}
        </p>
    </div>
}